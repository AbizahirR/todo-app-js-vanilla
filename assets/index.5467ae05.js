const T=function(){const n=document.createElement("link").relList;if(n&&n.supports&&n.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))e(o);new MutationObserver(o=>{for(const t of o)if(t.type==="childList")for(const d of t.addedNodes)d.tagName==="LINK"&&d.rel==="modulepreload"&&e(d)}).observe(document,{childList:!0,subtree:!0});function i(o){const t={};return o.integrity&&(t.integrity=o.integrity),o.referrerpolicy&&(t.referrerPolicy=o.referrerpolicy),o.crossorigin==="use-credentials"?t.credentials="include":o.crossorigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function e(o){if(o.ep)return;o.ep=!0;const t=i(o);fetch(o.href,t)}};T();const p=document.querySelector(".todo-list"),r=(s="")=>{let n=l();const i=n.filter(e=>!e.completed).length;s!==""&&(n=n.filter(e=>e.completed===s)),p.innerHTML="",(n==null?void 0:n.length)>0&&n.map(e=>{const o=e.completed,t=document.createElement("li");t.classList.add(o?"completed":"uncompleted"),t.setAttribute("data-id",e.id),t.innerHTML=`<div class="view">
                                    <input class="toggle" type="checkbox" ${o?"checked":""}>
                                    <label>${e.body}</label>
                                    <button" class="destroy"></button>
                                </div>
                                <input class="edit" value="${e.body}">`,p.appendChild(t),t.querySelector(`[data-id="${e.id}"] label`).addEventListener("dblclick",a=>{const c=t.querySelector(`[data-id="${e.id}"] input.edit`);t.classList.add("editing"),c.focus(),c.addEventListener("keyup",u=>{if(u.key==="Escape"&&(t.classList.remove("editing"),c.removeEventListener("keyup",f=>{})),u.key==="Enter"){const f={id:e.id,body:c.value,completed:e.completed};m(e.id,f)}})});const L=t.querySelector(`[data-id="${e.id}"] .toggle`),h=document.querySelector(`[data-id="${e.id}"]`);L.addEventListener("click",()=>{h.classList.toggle("completed");const a={id:e.id,body:e.body,completed:!e.completed};m(e.id,a)}),t.querySelector(`[data-id="${e.id}"] .destroy`).addEventListener("click",()=>{S(e.id)});const v=document.querySelector(".todo-count");v.innerHTML=i!==1?`<strong>${i}</strong> items left`:`<strong>${i}</strong> item left`})},l=()=>localStorage.getItem("todos")?JSON.parse(localStorage==null?void 0:localStorage.getItem("todos")):[],w=(s=[])=>{localStorage.setItem("todos",JSON.stringify(s)),r()},S=s=>{const i=l().filter(e=>e.id!==s);localStorage.setItem("todos",JSON.stringify(i)),r()},m=(s,n)=>{const e=l().map(o=>o.id===s?n:o);localStorage.setItem("todos",JSON.stringify(e)),window.location.href.includes("#/active")?r(!1):window.location.href.includes("#/completed")?r(!0):r()};r();const y=document.querySelector(".new-todo"),g=()=>{window.location.href.includes("#/active")?r(!1):window.location.href.includes("#/completed")?r(!0):r()};y.addEventListener("keyup",s=>{if(s.key==="Enter"){const n=l(),i={id:Math.random().toString(8).substring(2),body:y.value,completed:!1},e=[...n,i];w(e),s.currentTarget.value=""}});window.addEventListener("load",g);window.addEventListener("hashchange",g);
