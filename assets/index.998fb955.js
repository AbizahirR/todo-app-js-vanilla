const g=function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))s(o);new MutationObserver(o=>{for(const n of o)if(n.type==="childList")for(const l of n.addedNodes)l.tagName==="LINK"&&l.rel==="modulepreload"&&s(l)}).observe(document,{childList:!0,subtree:!0});function d(o){const n={};return o.integrity&&(n.integrity=o.integrity),o.referrerpolicy&&(n.referrerPolicy=o.referrerpolicy),o.crossorigin==="use-credentials"?n.credentials="include":o.crossorigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function s(o){if(o.ep)return;o.ep=!0;const n=d(o);fetch(o.href,n)}};g();const m=document.querySelector(".todo-list"),c=(t="")=>{let e=r();const d=e.filter(s=>!s.completed).length;t!==""&&(e=e.filter(s=>s.completed===t)),m.innerHTML="",(e==null?void 0:e.length)>0&&e.map(s=>{const o=s.completed,n=document.createElement("li");n.classList.add(o?"completed":"uncompleted"),n.setAttribute("data-id",s.id),n.innerHTML=`<div class="view">
                                    <input class="toggle" type="checkbox" ${o?"checked":""}>
                                    <label class="description">${s.body}</label>
                                    <button" class="destroy"></button>
                                </div>
                                <input class="edit" value="${s.body}">`,m.appendChild(n),L(n,s),v(n,s),f(n,s),y(d)})},i=()=>{const t=document.querySelector(".clear-completed");r().filter(s=>s.completed).length>=1?t.textContent="Clear completed":t.textContent=""},y=t=>{const e=document.querySelector(".todo-count");e.innerHTML=t!==1?`<strong>${t}</strong> items left`:`<strong>${t}</strong> item left`},f=(t,e)=>{t.querySelector(`[data-id="${e.id}"] .destroy`).addEventListener("click",()=>{E(e.id)})},v=(t,e)=>{const d=t.querySelector(`[data-id="${e.id}"] .toggle`),s=document.querySelector(`[data-id="${e.id}"]`);d.addEventListener("click",()=>{s.classList.toggle("completed");const o={id:e.id,body:e.body,completed:!e.completed};p(e.id,o)})},L=(t,e)=>{t.querySelector(`[data-id="${e.id}"] label`).addEventListener("dblclick",s=>{const o=t.querySelector(`[data-id="${e.id}"] input.edit`);t.classList.add("editing"),o.focus(),o.addEventListener("keyup",n=>{if(n.key==="Escape"&&(t.classList.remove("editing"),o.removeEventListener("keyup",l=>{})),n.key==="Enter"){const l={id:e.id,body:o.value,completed:e.completed};p(e.id,l)}})})},r=()=>localStorage.getItem("todos")?JSON.parse(localStorage==null?void 0:localStorage.getItem("todos")):[],h=(t=[])=>{localStorage.setItem("todos",JSON.stringify(t)),c()},E=t=>{const d=r().filter(s=>s.id!==t);localStorage.setItem("todos",JSON.stringify(d)),c()},T=()=>{const e=r().filter(d=>!d.completed);localStorage.setItem("todos",JSON.stringify(e)),u()},p=(t,e)=>{const s=r().map(o=>o.id===t?e:o);localStorage.setItem("todos",JSON.stringify(s)),u()},a=document.querySelector(".new-todo"),S=document.querySelector(".clear-completed");S.addEventListener("click",()=>{T()});const u=()=>{const t=window.location.href.split("/").at(-1);t.includes("active")?(c(!1),i(),document.getElementById("active").classList.add("selected"),document.getElementById("completed").classList.remove("selected"),document.getElementById("all").classList.remove("selected")):t.includes("completed")?(c(!0),i(),document.getElementById("completed").classList.add("selected"),document.getElementById("active").classList.remove("selected"),document.getElementById("all").classList.remove("selected")):(c(),i(),document.getElementById("all").classList.add("selected"),document.getElementById("completed").classList.remove("selected"),document.getElementById("active").classList.remove("selected"))};a.addEventListener("keyup",t=>{if(t.key==="Enter"){const e=r(),d={id:Math.random().toString(8).substring(2),body:a.value,completed:!1},s=[...e,d];a.value.split("").length>5?h(s):alert("Please enter a longer todo"),t.currentTarget.value=""}});window.addEventListener("load",()=>{c()});window.addEventListener("hashchange",u);
