const y=function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const l of document.querySelectorAll('link[rel="modulepreload"]'))o(l);new MutationObserver(l=>{for(const s of l)if(s.type==="childList")for(const c of s.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&o(c)}).observe(document,{childList:!0,subtree:!0});function n(l){const s={};return l.integrity&&(s.integrity=l.integrity),l.referrerpolicy&&(s.referrerPolicy=l.referrerpolicy),l.crossorigin==="use-credentials"?s.credentials="include":l.crossorigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function o(l){if(l.ep)return;l.ep=!0;const s=n(l);fetch(l.href,s)}};y();const m=document.querySelector(".todo-list"),r=(t="")=>{let e=d();f(e);const n=e.filter(o=>!o.completed).length;t!==""&&(e=e.filter(o=>o.completed===t)),m.innerHTML="",(e==null?void 0:e.length)>0&&e.map(o=>{const l=o.completed,s=document.createElement("li");s.classList.add(l?"completed":"uncompleted"),s.setAttribute("data-id",o.id),s.innerHTML=`<div class="view">
                                    <input class="toggle" type="checkbox" ${l?"checked":""}>
                                    <label class="description">${o.body}</label>
                                    <button" class="destroy"></button>
                                </div>
                                <input class="edit" value="${o.body}">`,m.appendChild(s),T(s,o),h(s,o),L(s,o),v(n)})},f=t=>{const e=document.querySelector(".toggle-all"),n=document.querySelector("label[for='toggle-all']");t.length<=0?(e.style.display="none",n.style.display="none"):(e.style.display="initial",n.style.display="initial")},a=()=>{const t=document.querySelector(".clear-completed");d().filter(o=>o.completed).length>=1?t.textContent="Clear completed":t.textContent=""},v=t=>{const e=document.querySelector(".todo-count");e.innerHTML=t!==1?`<strong>${t}</strong> items left`:`<strong>${t}</strong> item left`},L=(t,e)=>{t.querySelector(`[data-id="${e.id}"] .destroy`).addEventListener("click",()=>{S(e.id)})},h=(t,e)=>{const n=t.querySelector(`[data-id="${e.id}"] .toggle`),o=document.querySelector(`[data-id="${e.id}"]`);n.addEventListener("click",()=>{o.classList.toggle("completed");const l={id:e.id,body:e.body,completed:!e.completed};g(e.id,l)})},T=(t,e)=>{t.querySelector(`[data-id="${e.id}"] label`).addEventListener("dblclick",o=>{const l=t.querySelector(`[data-id="${e.id}"] input.edit`);t.classList.add("editing"),l.focus(),l.addEventListener("focusout",s=>{t.classList.remove("editing"),l.removeEventListener("keyup",c=>{})}),l.addEventListener("keyup",s=>{if(s.key==="Enter"){const c={id:e.id,body:l.value,completed:e.completed};g(e.id,c)}})})},d=()=>localStorage.getItem("todos")?JSON.parse(localStorage==null?void 0:localStorage.getItem("todos")):[],p=(t=[])=>{localStorage.setItem("todos",JSON.stringify(t)),r()},S=t=>{const n=d().filter(o=>o.id!==t);localStorage.setItem("todos",JSON.stringify(n)),r()},b=()=>{const e=d().filter(n=>!n.completed);localStorage.setItem("todos",JSON.stringify(e)),i()},g=(t,e)=>{const o=d().map(l=>l.id===t?e:l);localStorage.setItem("todos",JSON.stringify(o)),i()},u=document.querySelector(".new-todo"),E=document.querySelector(".clear-completed"),i=()=>{const t=window.location.href.split("/").at(-1);t.includes("active")?(r(!1),a(),document.getElementById("active").classList.add("selected"),document.getElementById("completed").classList.remove("selected"),document.getElementById("all").classList.remove("selected")):t.includes("completed")?(r(!0),a(),document.getElementById("completed").classList.add("selected"),document.getElementById("active").classList.remove("selected"),document.getElementById("all").classList.remove("selected")):(r(),a(),document.getElementById("all").classList.add("selected"),document.getElementById("completed").classList.remove("selected"),document.getElementById("active").classList.remove("selected"))};window.onload=()=>{i(),window.addEventListener("hashchange",i)};document.querySelector(".toggle-all").addEventListener("click",()=>{const t=d(),e=t.filter(o=>o.completed);let n;t.length===e.length?n=t.map(o=>({id:o.id,body:o.body,completed:!o.completed})):n=t.map(o=>({id:o.id,body:o.body,completed:!0})),p(n)});E.addEventListener("click",()=>{b()});u.addEventListener("keyup",t=>{if(t.key==="Enter"){const e=d(),n={id:Math.random().toString(8).substring(2),body:u.value,completed:!1},o=[...e,n];u.value.trim()!==""?p(o):alert("Please enter a valid todo"),t.currentTarget.value=""}});
